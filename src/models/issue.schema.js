// Importing ObjectId and mongoose library for MongoDB interactions
import { ObjectId } from "mongoose";
import mongoose from "mongoose";

// Defining the issue schema using mongoose
const issueSchema = new mongoose.Schema({
    // Reference to the associated project using ObjectId
    projectId: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'projects',
        required: true,
    },
    // Title of the bug/issue
    bugTitle: {
        type: String,
        required: true,
    },
    // Array of error types or categories
    bugOption: {
        type: [String],
        required: true,
    },
    // Description of the bug/issue
    bugDescription: {
        type: String,
        required: true,
    },
    // Author or creator of the bug/issue
    bugAuthor: {
        type: String,
        required: true,
    },
    // Timestamp for when the bug/issue was posted, with a default value generated by the formatDate function
    postTime: {
        type: String, // Assuming you have a valid date string here
        default: () => formatDate(),
    },
});

// Creating a model based on the defined schema
const IssueModel = mongoose.model('issues', issueSchema);

// Exporting the IssueModel
export default IssueModel;

// Function to format the current date and time
function formatDate() {
    // Array of month abbreviations
    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
  
    // Creating a new Date object for the current date and time
    const currentDate = new Date();
  
    // Extracting hours, minutes, day, month, and year from the current date
    const hours = String(currentDate.getHours()).padStart(2, '0');
    const minutes = String(currentDate.getMinutes()).padStart(2, '0');
    const day = String(currentDate.getDate()).padStart(2, '0');
    const month = months[currentDate.getMonth()];
    const year = currentDate.getFullYear();
  
    // Constructing a formatted date and time string
    const formattedDateTime = `${hours}:${minutes} ${day}${month} ${year}`;
  
    // Returning the formatted date and time string
    return formattedDateTime;
}
